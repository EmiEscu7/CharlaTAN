version: "2.0"

intents:
  - greet
  - goodbye
  - affirm
  - deny
  #- mood_great
 # - mood_unhappy
#  - bot_challenge

  # ----------->>> INTENTS RELATED TO PSYBOT <<<<-----------
  - psybot_want_interview
  - psybot_answer_yes
  - psybot_answer_maybe_yes
  - psybot_answer_undecided
  - psybot_answer_maybe_no
  - psybot_answer_no

  # ----------->>> INTENTS RELATED TO SCRUM ASSITANT <<<<-----------
  - scrum_assistant_not_understand
  - scrum_assistant_explain_me_topic
  - scrum_assistant_need_example


entities:
  # ----------->>> ENTITIES RELATED TO SCRUM ASSISTANT <<<<-----------
  - tema
  - topic


slots:
  # ----------->>> SLOTS RELATED TO PSYBOT <<<<-----------
  question_to_ask:
    type: text
    initial_value: None

  # ----------->>> SLOTS RELATED TO SCRUM ASSISTANT <<<<-----------
  tema:
    type: text
    initial_value: None

  # TourPolicy sets this slot so action_set_timer can dispatch the correct utter.
  next_topic:
    type: text
    initial_value: None

  # TourPolicy sets this slot so action_set_timer knows if a timer must be set after the utter is given.
  must_set_timer:
    type: bool
    initial_value: False

responses:
  utter_greet:
  - text: "Hey! How are you?"

  utter_cheer_up:
  - text: "Here is something to cheer you up:"
    image: "https://i.imgur.com/nGF1K8f.jpg"

  utter_did_that_help:
  - text: "Did that help you?"

  utter_happy:
  - text: "Great, carry on!"

  utter_goodbye:
  - text: "Bye"

  utter_iamabot:
  - text: "I am a bot, powered by Rasa."

  # ----------->>> UTTERS RELATED TO PSYBOT <<<<-----------
  utter_presentation:
  - text: "Hola, yo soy PsyBot, el encargado de analizar el comportamiento de
    los TeamMembers dentro de ScrumTalk."
  utter_interview_finished:
    - text: "Ya no tengo mas preguntas para hacerte. Gracias por tu tiempo."
  utter_interview_not_started:
    - text: "No podes responder a preguntas si todavia no empezo la entrevista."


  # ----------->>> UTTERS RELATED TO SCRUM ASSISTANT <<<<-----------
  utter_start_tour:
    - text: "Genial! Por favor acompáñame al hall así arrancamos el tour."

  utter_ask_good:
    - text: "Correcto ahi te va otra"

  utter_ask_bad:
    - text: "Nono le errraste, es esto en realidad es"

  utter_default:
    - text: "default"

  utter_sin_ejemplos:
    - text: "No tengo mas ejemplos de este tema."

  utter_no_examples:
    - text: "Perdona, no te puedo resolver esa consulta."
    - text: "No tengo un ejemplo para ese tema."
    - text: "No tengo un ejemplo."

  utter_sin_question:
    - text: "No tengo mas preguntas para hacerte."

  utter_ask:
    - text: "Bueno ahora vamos con unas preguntas de estos temas para ver cuanto sabes"

  # Conversation tour handlers
  # --------------------------

  utter_cross_examine_jump_global:
    - text: "Queres que explique desde ese tema y omitamos los temas intermedios o solo te explico ese tema particular"

  utter_cross_examine_jump_sequential:
    - text: "Queres que te explique todo de nuevo apartir de ese tema o solo te explico de nuevo ese tema particular"

  utter_cross_examine_example:
    - text: "Queres que te de un ejemplo de este tema o queres que te haga otra explicacion"

  # Explanations of Scrum Assistant
  # ------------
  utter_scrum:
    - text: "En nuestro proyecto utilizamos el marco de trabajo Scrum, es un proceso en el que se aplican
    de manera regular un conjunto de buenas prácticas para trabajar colaborativamente, en equipo y obtener
    el mejor resultado posible de proyectos. A continuación vamos a realizar un recorrido por las distintas
    salas para que puedas ver que actividades se realizan en cada una de ellas y que artefactos se usan en
    cada etapa del proceso."

  utter_sprint_planning_preview:
    - text: "El Sprint Planning es una reunión que se realiza al comienzo de cada Sprint que sirve para inspeccionar
    el Product Backlog y que el equipo de desarrollo seleccione los Product Backlog Items en los que va a
    trabajar durante el siguiente Sprint. Este evento lo veremos mas adelante, por ahora sigamos con el
    tema {tema}."

  utter_sprint_planning:
    - text: "En esta sala se lleva a cabo el Sprint Planning, una reunión que se realiza al comienzo de cada
    Sprint donde participa el equipo Scrum al completo; sirve para inspeccionar el Product Backlog y que
    el equipo de desarrollo seleccione los Product Backlog Items en los que va a trabajar durante el
    siguiente Sprint. Estos Product Backlog Items son los que compondrán el Sprint Backlog."

  utter_sprint_planning_2:
    - text: "Durante el Sprint Planning, el Product Owner presenta el Product Backlog actualizado que el equipo
    de desarrollo se encarga de estimar, además de intentar clarificar aquellos ítems que crea necesarios.
    Este evento se divide en dos partes: en la primera parte de la reunión se trata Qué se va a hacer en el
    siguiente Sprint y, en la segunda parte, se discute el Cómo. La primera parte está organizada y liderada
    por el Product Owner, mientras que de la segunda parte se encarga el Development Team. Puede durar hasta 8
    horas para Sprints de 4 semanas."

  utter_product_backlog_preview:
    - text: "El Product Backlog es un inventario que contiene cualquier tipo de trabajo que haya
    que hacer en el producto, ese artefacto lo veremos más adelante. Por el momento sigamos con el tema {tema}."

  utter_product_backlog:
    - text: "El Product Backlog es un inventario que contiene cualquier tipo de trabajo que haya
    que hacer en el producto: requerimientos, casos de uso, tareas y dependencias."

  utter_product_backlog_2:
    - text: "El Product Backlog es básicamente una lista, en cualquier formato, que contiene todos los
    requerimientos que necesitamos implementar en el producto. Es la principal fuente de información sobre
    el producto en Scrum."

  utter_product_owner_preview:
    - text: "El Product Owner, que es la persona que representa a los stakeholders, y a través del Product
    Backlog, gestiona el flujo de valor del producto.. Mas adelante vamos a profundizar en ese rol, por el
    momento sigamos con el tema {tema}."

  utter_product_owner:
    - text: "El Product Backlog es gestionado por el Product Owner, que representa a los stakeholders. Es el
    encargado de optimizar y maximizar el valor del producto, gestiona el flujo de valor del producto a
    través del Product Backlog."

  utter_product_owner_2:
    - text: "El Product Owner representa los stakeholders, estas son las personas que hacen posible el
    proyecto y para quienes el proyecto producirá el beneficio acordado que justifica su desarrollo, por
    ejemplo clientes, proveedores, etc. Es un rol que está muy pegado al negocio a través de los clientes
    o a personas que tienen relación con ellos, debe descubrir sus necesidades y buscar soluciones a las
    mismas. Para ello utiliza el Product Backlog, donde se detalla qué debe realizarse para cubrir esa necesidad."

  utter_epic_preview:
    - text: "Una Épica es un conjunto de trabajo grande que puede dividirse en historias de usuario
    en función de las necesidades o solicitudes de los clientes o usuarios finales. Este elemento
    lo veremos mas adelante en el tour, por el momento sigamos con el tema {tema}."

  utter_epic:
    - text: "Dentro del Product Backlog, los requerimientos del cliente se traducen a épicas que son
    un conjunto de trabajo grande que puede dividirse en historias de usuario en función de las
    necesidades o solicitudes de los clientes o usuarios finales."

  utter_epic_2:
    - text: "Una épica puede visualizarse como una historia de usuario que aún no se ha detallado,
    es demasiado grande o todavía presenta mucha incertidumbre y, por lo tanto, no se puede
    transformar en un incremento del producto. Debe dividirse en historias de usuario más pequeñas."

  utter_epic_example:
    - text: "Supongamos que deseas entrar en un nuevo mercado, por ejemplo, el mercado de software de gestión de
    proyectos. Está seria tu iniciativa o tema de alto nivel. Este objetivo se puede desglosar en dos épicas:
    \nLa primera es desarrollar nuevas características para la gestión de proyectos Agile.
    \nY la segunda, mejorar nuestras características actuales para que sean adecuadas para los gerentes de proyecto."

  utter_user_story_preview:
    - text: "Una historia de usuario es la descripción funcional utilizada en las metodologías ágiles para
    especificar el desarrollo de una característica. Esto lo veremos mas adelante, ahora sigamos con el tema {tema}."

  utter_user_story:
    - text: "Como ya te mencioné, una épica puede dividirse en historias de usuario que son descripciones funcionales
    para especificar el desarrollo de una característica.
    Estas definen lo que se debe construir en el proyecto de software, tienen una prioridad asociada definida por
    el cliente de manera de indicar cuales son las más importantes para el resultado final."

  utter_user_story_2:
    - text: "Las historias de usuario son descripciones cortas y simples de una característica contada desde
    la perspectiva de la persona que desea la nueva capacidad. Por lo general, siguen una plantilla simple:
    \n\t Como <perfil> quiero <algún objetivo> para que <motivo>
    \nEsta estructura no es obligatoria, pero resulta de ayuda para establecer una definición de Done. Cuando
    ese perfil puede alcanzar su valor deseado, la historia está completa."

  utter_user_story_example:
    - text: "Por lo general, las historias de usuario siguen la siguiente plantilla:
    \n\t Como <perfil> quiero <algún objetivo> para que <motivo>
    \nPor ejemplo, pueden tener este aspecto: como usuario quiero buscar en las ofertas de trabajo para ver
    cuales me interesan."

  utter_task_preview:
    - text: "Las tareas son elementos técnicos necesarios para que una Historia de Usuario se transforme en
    un incremento del producto. Mas adelante veremos este elemento, ahora continuemos con el tema {tema}."

  utter_task:
    - text: "Para que las historias de usuario se transforme en un incremento del producto es necesario
    descomponerla en tareas o elementos técnicos para gestionarla y seguir el avance de su ejecución."

  utter_task_2:
    - text: "Una tarea no es parte del resultado del proyecto, es más bien el medio para producir el resultado.
    Las tareas son elementos técnicos necesarios para que una Historia de Usuario se transforme en un incremento
    del producto. Las historias de usuario se descomponen en tareas para gestionar y seguir el avance de su ejecución.
    Normalmente durante la reunión de Sprint Planning, el equipo de desarrollo se identifica y genera estas tareas técnica."

  utter_task_example:
    - text: "Por ejemplo a la historia de usuario: Como usuario quiero buscar en las ofertas de trabajo para ver
    cuales me interesan, la podemos dividir en las tareas técnicas:
    \nCrear UI de presentación de resultados.
    \nCrear los métodos de consulta a BBDD para que retornen resultados.
    \nY mostrar un mensaje si no se encuentran resultados con los criterios de búsqueda."

  utter_development_team_preview:
    - text: "El Development Team es un grupo de personade que trabajan juntas para entregar los incrementos
    de productos requeridos en cada Sprint. Este rol lo veremos mas adelante, por el momento sigamos con el tema {tema}."

  utter_development_team:
    - text: "Durante el desarrollo del Sprint, el Development Team trabaja las tareas que se pueden visulizar
    en este tablero. Este grupo se auto-organiza y gestiona su propio trabajo a través del Scrum Board para
    transformar todos los ítems del Product Backlog en incrementos de desarrollo."

  utter_development_team_2:
    - text: "El Development Team es un grupo de personas que trabajan juntas para entregar los incrementos
    de productos requeridos en cada Sprint. Generalmente son entre 5 y 9 miembros. Son responsables de: Crear
    un plan para el Sprint, inculcar calidad al adherirse a una Defición de Done, adaptar su plan cada día hacia
    el objetivo del Sprint y responsabilizarse mutuamente como profesionales."

  utter_scrum_board_preview:
    - text: "El Scrum Board es un tablero que sirve para oganizar la gestión del proyecto. Mas adelante te
    mostraré el tablero que utilizamos en este proyecto, por el momento sigamos con el tema {tema}."

  utter_scrum_board:
    - text: "El Scrum Board es utilizado por todo el equipo para organizar la gestión del proyecto.
    Cuenta con columnas que indican el estado de cada tarea necesaria para completar los elementos del Sprint Backlog.
    En nuestro proyecto, las tareas pueden estar por hacerse, en progreso o finalizadas."

  utter_scrum_board_2:
    - text: "Cuenta con columnas que indican el estado de cada tarea y sirve para:
    \nDividir el proyecto en fases bien definidas.
    \nConocer la efectividad del equipo.
    \nMonitorear el desarrollo de las tareas, de acuerdo con los objetivos de cada iteración.
    \nAplicar cambios para obtener los resultados esperados.
    \nDinamizar la actividad.
    En nuestro caso, contamos con un tablero físico conformado por columnas con las tareas a realizar, las
    tareas en progreso y las tareas finalizadas."

  utter_task_in_progress:
    - text: "En la columna To Do se encuentran las tareas pendientes, cuando una persona del equipo de
    desarrollo comienza a trabajar en una tarea de esta columna debe moverla a In Progress de esta manera."

  utter_task_done:
    - text: "Cuando termina la tarea que tenia en progreso, debe asegurarse junto con el Product Owner que esa
    tarea cumpla con la Definción de Done, que es un documento con una serie de criterios para determinar
    cuando una tarea está completamente hecha. Luego, debe mover la tarea de In Progress a la columna Done de
    esta manera."

  utter_interact_with_kanban:
    - text: "Si queres podes probar a interactuar con el Kanban. Cuando quieras continuar con el tour, volve y hablame."

  utter_development_room:
    - text: "Este es el lugar donde trabajan los desarrolladores, para completar las tareas que te explique anteriormente."

  utter_daily_meeting_preview:
    - text: "Una Daily Meeting es una reunión de 15 minutos de duración, del equipo de desarrollo scrum. En la misma,
    sincronizan las actividades que están ocurriendo en el sprint, y la planificación de las actividades de las próximas
    24 horas. Este evento lo veremos mas adelante, por ahora sigamos con el tema {tema}."

  utter_daily_meeting:
    - text: "La Daily Scrum o Daily Meeting es una reunión diaria de 15 minutos. Durante la misma, cada una de las
    personas del Development Team responden a las siguientes preguntas:
      \n¿Qué hice ayer para contribuir al Sprint Goal?
      \n¿Qué voy a hacer hoy para contribuir al Sprint Goal?
      \n¿Tengo algún impedimento que me impida entregar?
    \nSu objetivo es evaluar diariamente el progreso y la tendencia del progreso hasta la finalización del Sprint,
    sincronizando las actividades y creando un plan para las próximas 24 horas.
    \nSi te parece bien quedate a presenciar la reunión y cuando quieras continuar con el recorrido avísame."

  utter_sprint_review_preview:
    - text: "El Sprint Review es una reunión que se realiza al final el Sprint, en la cual se revisa el incremento terminado.
    Esto lo veremos mas adelante, por el momento sigamos con el tema {tema}."

  utter_sprint_review:
    - text: "En esta sala también nos reunimos al final del Sprint para las etapas de revisión y retrospectiva.
    Durante el Sprint Review, se presenta a los stakeholders el incremento terminado para su inspección
    y adaptación correspondientes. Se estudia cuál es la situación y se actualiza el Product Backlog con las nuevas
    condiciones que puedan afectar al negocio."

  utter_sprint_review_2:
    - text: "Durante el Sprint Review, se revisará el incremento terminado. Se mostrará el software funcionando en producción y
    los stakeholders tendrán la oportunidad de hacer cuantas preguntas estimen oportunas sobre el mismo. El software
    funcionando ha sido validado previamente por el Product Owner, que se ha encargado de trabajar con el equipo
    durante el Sprint para asegurarse que cumple con la Definition of Done y, efectivamente, hace que el Sprint Goal sea válido.
    El equipo de desarrollo comenta posteriormente qué ha ocurrido durante el Sprint, los impedimentos que se han encontrado,
    así como soluciones tomadas y actualizan a los stakeholders con la situación del equipo. Por último, el Product Owner
    actualiza, con la información de negocio recibida en esta reunión, el Product Backlog para el siguiente Sprint."

  utter_sprint_retrospective_preview:
    - text: "La retropectiva es una reunión que se realiza al final del Sprint para inspeccionar
    el equipo y levantar mejoras que se apliquen en el siguiente Sprint. Este evento lo explicaré mas adelante,
    por ahora sigamos con el tema {tema}."

  utter_sprint_retrospective:
    - text: "Luego, hacemos una retrospectiva para reflexionar sobre el último Sprint e identificar posibles mejoras
    para el próximo."

  utter_sprint_retrospective_2:
    - text: "La retropectiva, en otras palabras, es una reunión que se realiza para inspeccionar el equipo y levantar
    mejoras que se apliquen en el siguiente Sprint. Un formato común es analizar qué ha ido bien durante el Sprint, qué
    ha fallado y qué se puede mejorar. Este formato se puede facilitar pidiendo a los miembros del equipo Scrum que
    escriban notas para luego agruparlas y votar aquellos ítems más relevantes, dando la oportunidad a todos de hablar
    y expresar sus inquietudes."

  utter_scrum_master_preview:
    - text: "El Scrum Master es el responsable de que Scrum sea entendido y bien aplicado dentro de la
    organización. Mas adelante te voy a comentar mas sobre este rol, por el momento sigamos con el tema {tema}."

  utter_scrum_master:
    - text: "En esta sala trabaja el Scrum Master que es el responsable de que Scrum sea entendido y bien aplicado
    dentro de la organización. Tiene dos funciones principales dentro del marco de trabajo: gestionar el proceso Scrum
    y ayudar a eliminar impedimentos que puedan afectar a la entrega del producto.
    \nPor ejemplo, en las Daily Meetings se encarga de hacer cumplir el objetivo de la reunión, de que estén disponibles
    todos los recursos que se necesitan y que todas las voces sean escuchadas. Además, interviene si considera que no se
    están visibilizando realmente los impedimentos."

  utter_scrum_master_2:
    - text: "El Scrum Master es un entrenador y facilitador de equipos Scrum. Para que entiendas que función
    cumple te voy a explicar sus dos funciones principales mas detalladamente:
    \nGestionar el proceso Scrum: el Scrum Master se encarga de gestionar y asegurar que el proceso Scrum se lleva a cabo
    correctamente, así como de facilitar la ejecución del proceso y sus mecánicas.
    \nEliminar impedimentos: esta función del Scrum Master indica la necesidad de ayudar a eliminar progresiva y constantemente
    impedimentos que van surgiendo en la organización y que afectan a su capacidad para entregar valor, así como a la integridad
    de esta metodología."

  # Questions asked to the trainee
  # ------------------------------

  utter_cross_examine_topic_scrum:
    - text: "Proceso Scrum es tomar Fernet"

  utter_cross_examine_topic_product_backlog:
    - text: "Product Backlog es un llavero con tu nombre"

  utter_cross_examine_topic_product_owner:
    - text: "Product owner es Product owner"

  utter_cross_examine_topic_epic:
    - text: "Epica es Epica"

  utter_cross_examine_topic_scrum_master:
    - text: "Scrum Master es Scrum Master"


actions:
  # acciones relacionadas al psybot
  - action_psybot_ask_again
  - action_psybot_ask_question
  - action_psybot_interview_not_starte

  # acciones relacionadas al scrum assitant
  - action_default_fallback
  - action_set_timer
  - action_topic_not_recognized

session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
